name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:



  create_draft_release:
    env:
      commitmsg: ${{ github.event.head_commit.message }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Changes in this Release
            ${{ env.commitmsg }}
          draft: true
          prerelease: false



  build_esp8266_firmware_full:
    runs-on: ubuntu-24.04
    needs: [ create_draft_release ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - id: get-id
        run: |
          id=$(echo $RELEASE_VERSION | cut -dv -f2)
          echo "id=$id" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
          python --version
      - name: Install submodules
        run: |
          git submodule update --init
      - name: Setup template config files
        run: |
          cp /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini.template /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini
          touch .version_no_increment_update_date;
          echo ${{steps.get-id.outputs.id}} > version
      - name: Run PlatformIO
        run: platformio run -e glowwormluciferinfull_esp8266
      - name: Save artifact (glowwormluciferinfull_esp8266)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp .pio/build/glowwormluciferinfull_esp8266/firmware.bin ./GlowWormLuciferinFULL_ESP8266_firmware.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinFULL_ESP8266_firmware.bin

      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP8266_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp8266/firmware.bin

      - name: Saving version files
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/version

      - name: Saving Version.h files
        uses: actions/upload-artifact@v4
        with:
          name: Version.h
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/include/Version.h



  build_esp8266_firmware_light:
    runs-on: ubuntu-24.04
    needs: [ create_draft_release ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - id: get-id
        run: |
          id=$(echo $RELEASE_VERSION | cut -dv -f2)
          echo "id=$id" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
          python --version
      - name: Install submodules
        run: |
          git submodule update --init
      - name: Setup template config files
        run: |
          cp /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini.template /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini
          touch .version_no_increment_update_date;
          echo ${{steps.get-id.outputs.id}} > version
      - name: Run PlatformIO
        run: platformio run -e glowwormluciferinlight_esp8266
      - name: Save artifact (glowwormluciferinlight_esp8266)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp .pio/build/glowwormluciferinlight_esp8266/firmware.bin ./GlowWormLuciferinLIGHT_ESP8266_firmware.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinLIGHT_ESP8266_firmware.bin

      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP8266_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp8266/firmware.bin



  build_esp32_firmware_full:
    runs-on: ubuntu-24.04
    needs: [ create_draft_release ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - id: get-id
        run: |
          id=$(echo $RELEASE_VERSION | cut -dv -f2)
          echo "id=$id" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
          python --version
      - name: Install submodules
        run: |
          git submodule update --init
      - name: Setup template config files
        run: |
          cp /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini.template /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini
          touch .version_no_increment_update_date;
          echo ${{steps.get-id.outputs.id}} > version
      - name: Run PlatformIO
        run: |
          platformio run -e glowwormluciferinfull_esp32
          platformio run -e glowwormluciferinfull_esp32c3cdc
          platformio run -e glowwormluciferinfull_esp32s2
          platformio run -e glowwormluciferinfull_esp32s3cdc
          platformio run -e glowwormluciferinfull_esp32s3
      - name: Save artifact (glowwormluciferinfull_esp32)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp .pio/build/glowwormluciferinfull_esp32/firmware-factory.bin ./GlowWormLuciferinFULL_ESP32_firmware-factory.bin
          cp .pio/build/glowwormluciferinfull_esp32c3cdc/firmware-factory.bin ./GlowWormLuciferinFULL_ESP32_C3_CDC_firmware-factory.bin
          cp .pio/build/glowwormluciferinfull_esp32s2/firmware-factory.bin ./GlowWormLuciferinFULL_ESP32_S2_firmware-factory.bin
          cp .pio/build/glowwormluciferinfull_esp32s3cdc/firmware-factory.bin ./GlowWormLuciferinFULL_ESP32_S3_CDC_firmware-factory.bin
          cp .pio/build/glowwormluciferinfull_esp32s3/firmware-factory.bin ./GlowWormLuciferinFULL_ESP32_S3_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinFULL_ESP32_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinFULL_ESP32_C3_CDC_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinFULL_ESP32_S2_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinFULL_ESP32_S3_firmware-factory.bin
          cp -i .pio/build/glowwormluciferinfull_esp32/firmware.bin ./GlowWormLuciferinFULL_ESP32_firmware.bin
          cp -i .pio/build/glowwormluciferinfull_esp32c3cdc/firmware.bin ./GlowWormLuciferinFULL_ESP32_C3_CDC_firmware.bin
          cp -i .pio/build/glowwormluciferinfull_esp32s2/firmware.bin ./GlowWormLuciferinFULL_ESP32_S2_firmware.bin
          cp -i .pio/build/glowwormluciferinfull_esp32s3cdc/firmware.bin ./GlowWormLuciferinFULL_ESP32_S3_CDC_firmware.bin
          cp -i .pio/build/glowwormluciferinfull_esp32s3/firmware.bin ./GlowWormLuciferinFULL_ESP32_S3_firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_C3_CDC_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32c3cdc/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_S2_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32s2/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_S3_CDC_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32s3cdc/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_S3_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32s3/firmware-factory.bin

      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_C3_CDC_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32c3cdc/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_S2_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32s2/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_S3_CDC_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32s3cdc/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinFULL_ESP32_S3_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinfull_esp32s3/firmware.bin



  build_esp32_firmware_light:
    runs-on: ubuntu-24.04
    needs: [ create_draft_release ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - id: get-id
        run: |
          id=$(echo $RELEASE_VERSION | cut -dv -f2)
          echo "id=$id" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio
          python --version
      - name: Install submodules
        run: |
          git submodule update --init
      - name: Setup template config files
        run: |
          cp /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini.template /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/secrets.ini
          touch .version_no_increment_update_date;
          echo ${{steps.get-id.outputs.id}} > version
      - name: Run PlatformIO
        run: |
          platformio run -e glowwormluciferinlight_esp32;
          platformio run -e glowwormluciferinlight_esp32c3cdc;
          platformio run -e glowwormluciferinlight_esp32s2;
          platformio run -e glowwormluciferinlight_esp32s3;
      - name: Save artifact (glowwormluciferinlight_esp32)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp .pio/build/glowwormluciferinlight_esp32/firmware-factory.bin ./GlowWormLuciferinLIGHT_ESP32_firmware-factory.bin
          cp .pio/build/glowwormluciferinlight_esp32c3cdc/firmware-factory.bin ./GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware-factory.bin
          cp .pio/build/glowwormluciferinlight_esp32s2/firmware-factory.bin ./GlowWormLuciferinLIGHT_ESP32_S2_firmware-factory.bin
          cp .pio/build/glowwormluciferinlight_esp32s3/firmware-factory.bin ./GlowWormLuciferinLIGHT_ESP32_S3_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinLIGHT_ESP32_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinLIGHT_ESP32_S2_firmware-factory.bin
          gh release upload "${{ env.RELEASE_VERSION }}" GlowWormLuciferinLIGHT_ESP32_S3_firmware-factory.bin
          cp -i .pio/build/glowwormluciferinlight_esp32/firmware.bin ./GlowWormLuciferinLIGHT_ESP32_firmware.bin
          cp -i .pio/build/glowwormluciferinlight_esp32c3cdc/firmware.bin ./GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware.bin
          cp -i .pio/build/glowwormluciferinlight_esp32s2/firmware.bin ./GlowWormLuciferinLIGHT_ESP32_S2_firmware.bin
          cp -i .pio/build/glowwormluciferinlight_esp32s3/firmware.bin ./GlowWormLuciferinLIGHT_ESP32_S3_firmware.bin

      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32c3cdc/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_S2_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32s2/firmware-factory.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_S3_firmware-factory.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32s3/firmware-factory.bin

      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32c3cdc/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_S2_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32s2/firmware.bin
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: GlowWormLuciferinLIGHT_ESP32_S3_firmware.bin
          path: /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/.pio/build/glowwormluciferinlight_esp32s3/firmware.bin



  web_tools_update:
    runs-on: ubuntu-24.04
    needs: [ build_esp8266_firmware_full, build_esp8266_firmware_light, build_esp32_firmware_full, build_esp32_firmware_light ]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: master
          path: 'currentbranch'
      - name: Save OLD JSON file to GIT
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd currentbranch;
          cp -R ./docs/static/firmware_build/* ./docs/static/firmware_build_previous/;
          git config --global user.email "perini.davide@dpsoftware.org";
          git config --global user.name "Davide Perini";
          git add ./docs/static/firmware_build_previous/*;
          git commit -m "CI release for firmware web installer";
          git push;
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - id: get-id
        run: |
          id=$(echo $RELEASE_VERSION | cut -dv -f2)
          echo "id=$id" >> $GITHUB_OUTPUT
      - name: Set property version in a ESP Web Tools json file
        uses: benday-inc/set-property-value-in-appsettings@v1.6
        with:
          pathtosettingsfile: '/home/runner/work/glow_worm_luciferin/glow_worm_luciferin/currentbranch/docs/static/firmware_build/manifest_full.json'
          keyname1: 'version'
          valuetoset: '${{steps.get-id.outputs.id}}'
      - name: Set property version in a ESP Web Tools json file
        uses: benday-inc/set-property-value-in-appsettings@v1.6
        with:
          pathtosettingsfile: '/home/runner/work/glow_worm_luciferin/glow_worm_luciferin/currentbranch/docs/static/firmware_build/manifest_light.json'
          keyname1: 'version'
          valuetoset: "${{steps.get-id.outputs.id}}"
      - name: Save JSON file to GIT
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd currentbranch;
          git config --global user.email "perini.davide@dpsoftware.org";
          git config --global user.name "Davide Perini";
          git add ./docs/static/firmware_build/manifest_full.json;
          git add ./docs/static/firmware_build/manifest_light.json;
          git commit -m "CI release for firmware web installer";
          git push;
      - uses: actions/download-artifact@v4
        with:
          path: ci_artifacts
      - name: Display structure of downloaded files
        run: |
          ls -R ci_artifacts;
      - name: Save artifact to GIT
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp -rf ci_artifacts/Version.h/Version.h ./currentbranch/include/Version.h
          cp -rf ci_artifacts/version/version ./currentbranch/version
          
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP8266_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP8266_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP8266_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP8266_firmware.bin
          
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_C3_CDC_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_C3_CDC_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_S2_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_S2_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_S3_CDC_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_S3_CDC_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_S3_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_S3_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_C3_CDC_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_C3_CDC_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_S2_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_S2_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_S3_CDC_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_S3_CDC_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinFULL_ESP32_S3_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinFULL_ESP32_S3_firmware.bin
          
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_S2_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_S2_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_S3_firmware-factory.bin/firmware-factory.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_S3_firmware-factory.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_C3_CDC_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_S2_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_S2_firmware.bin
          cp -rf ci_artifacts/GlowWormLuciferinLIGHT_ESP32_S3_firmware.bin/firmware.bin ./currentbranch/docs/static/firmware_build/GlowWormLuciferinLIGHT_ESP32_S3_firmware.bin
          
          cd currentbranch;
          ls ./docs/static/firmware_build/;
          git config --global user.email "perini.davide@dpsoftware.org";
          git config --global user.name "Davide Perini";
          git add ./version;
          git add ./include/Version.h;
          git add ./docs/static/firmware_build/*;
          git add ./docs/static/firmware_build_previous/*;
          cat /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/currentbranch/docs/static/firmware_build/manifest_full.json;
          cat /home/runner/work/glow_worm_luciferin/glow_worm_luciferin/currentbranch/docs/static/firmware_build/manifest_light.json;
          git commit -m "CI release for firmware web installer";
          git push;



  create_release:
    needs: [build_esp8266_firmware_full, build_esp8266_firmware_light, build_esp32_firmware_full, build_esp32_firmware_light, web_tools_update]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - id: get-id
        run: |
          id=$(echo $RELEASE_VERSION | cut -dv -f2)
          echo "id=$id" >> $GITHUB_OUTPUT

#      - name: Publish release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          hub release edit --draft=false -m "Release ${{ env.RELEASE_VERSION }}" "${{ env.RELEASE_VERSION }}"
